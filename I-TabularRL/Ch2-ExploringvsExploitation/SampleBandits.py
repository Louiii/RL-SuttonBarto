import json
import numpy as np
from PDFmaker import CompositeNormals, makeNormal

def partitionSamples(weights, n, nSamples):
    samples = {}
    for i in range(n): samples[i] = 0

    for _ in range(nSamples):
        r = np.random.rand()
        i = -1
        x = 0
        while x < r:
            i += 1
            x += weights[i]
        samples[i] += 1

    return samples

def GenerateSamples(pdf, nSamples):
    data = []
    partitionedSamples = partitionSamples(pdf.ws, pdf.n, nSamples)
    for partition, n in partitionedSamples.items():
        data += makeNormal(n, pdf.μs[partition], pdf.σs[partition])
    return data

def sampleBandit(bandit):
    r = np.random.rand()
    i = -1
    x = 0
    while x < r:
        i += 1
        x += bandit.ws[i]
    return makeNormal(1, bandit.μs[i], bandit.σs[i])[0]

def openBandits():
    json_file = open('RecordedBandits/Bandits.json')
    json_str = json_file.read()
    jsonData = json.loads(json_str)
    bandits = [CompositeNormals(tup[0], np.array(tup[1]), np.array(tup[2]), np.array(tup[3])) for tup in jsonData]
    return bandits

def makeData(resolution):
    bandits = openBandits()
    dataset = [ GenerateSamples(x, resolution ) for x in bandits]
    return np.array( dataset ).T
